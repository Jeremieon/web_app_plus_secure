name: Terraform

on:
  push:
    branches:
      - main

jobs:
    app_deploy:
        name : aws_simple_app
        runs-on: ubuntu-latest
        defaults:
            run:
              working-directory: ./infra_app

        steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
              terraform_version: 1.1.0
              cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          
        - name: Setup Terraform Backend
          id: backend
          run: |
              cat > backend.tf << EOF
              terraform {
                  cloud {
                      organization = "${{ secrets.TF_CLOUD_ORGANIZATION }}"
                      workspaces {
                      name = "${{ secrets.TF_CLOUD_WORKSPACE_AUTO_WORKSPACE }}"
                      }
                  }
              }
              EOF
            
        - name: Terraform Init
          run: terraform init

        - name: Terraform Plan
          run: terraform plan

        - name: Terraform Apply
          if: github.event_name == 'push' && contains(github.event.head_commit.message, 'deploy')
          run: terraform apply -auto-approve

        - name: Terraform Destroy
          if: github.event_name == 'push' && contains(github.event.head_commit.message, 'destroy')
          run: terraform destroy -auto-approve

    terraform_xc:
      name: "F5XC WAAP"
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./xc
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        - name: Setup Terraform Backend
          id: backend
          run: |
              echo "${{secrets.XC_API_P12_FILE}}" | base64 -d > api.p12
              echo VOLT_API_P12_FILE="$PWD/api.p12" >> "$GITHUB_ENV"
              cat > backend.tf << EOF
              terraform { 
                cloud {
                  organization = "${{ secrets.TF_CLOUD_ORGANIZATION }}"
                  workspaces {
                    name = "${{ secrets.TF_CLOUD_WORKSPACE_XC }}"
                }
              }

        - name: Terraform Plan
          id: plan
          if: github.event_name == 'pull_request'
          run: terraform plan -no-color -input=false
          continue-on-error: true

        - name: Terraform Destroy
          if: github.ref == 'refs/heads/destroy' && github.event_name == 'push'
          run: terraform destroy -auto-approve -input=false
              
        - name: Terraform Apply
          if: github.ref == 'refs/heads/main' && github.event_name == 'push'
          run: terraform apply -auto-approve -input=false

        - name: Terraform Init
          id: init
          run: terraform init
        
        - name: Terraform Validate
          id: validate
          run: terraform validate -no-color

        - name: Terraform Plan Status
          if: steps.plan.outcome == 'failure'
          run: exit 1

        - name: Terraform Destroy
          if: github.ref == 'refs/heads/destroy' && github.event_name == 'push'
          run: terraform destroy -auto-approve -input=false